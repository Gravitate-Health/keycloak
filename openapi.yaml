openapi: "3.0.1"
info:
  title: Gravitate Health Keycloak API Interface
  version: MVP2
  description: Gravitate Health authentication and user operations
  contact: {}
servers:
  - url: https://fosps.gravitatehealth.eu
paths:
  /auth/api/auth:
    post:
      tags:
        - Login
      description: Returns the access_token & refresh_token that will be used for the authorization
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: Login Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                example:
                  token_type: Bearer
                  access_token: ph28uqcrknpg36jbrsxgtmcsvjybgtuzcktketrd87d6649a7npx8b8vh7kej7u6bmyw3593xzkwfjfkycrsc9dy4p6aqt4yxwpqt5ssjmxauh6vx7tknjraecuvc438
                  refresh_token: p4mk9eemzznkwbpgsk6e3htnn92vbyq37kvz2kupuupm8b6f2g3ccwdjbffrg2av2xrezabmb7kd4s6dj8x7q7gj83465adge8fe4bgmhqe6nw9b3hyxtj765xgya44r
        '401':
          description: Login Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  'status ':
                    type: string
                  'errors ':
                    type: object
                example:
                  errors:
                    status_code: 401
                  message: Wrong Email/Password combination
                  status: Unauthorized
        '422':
          description: Invalid Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  'errors ':
                    type: object
                example:
                  errors:
                    title: The Title Field is required
                  message: The given data was invalid.
  /auth/api/refresh:
    post:
      tags:
        - Refresh Token
      description: Returns the access_token & refresh_token that will be used for the authorization
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RefreshToken'
      responses:
        '200':
          description: Refresh Successfull
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                example:
                  access_token: ph28uqcrknpg36jbrsxgtmcsvjybgtuzcktketrd87d6649a7npx8b8vh7kej7u6bmyw3593xzkwfjfkycrsc9dy4p6aqt4yxwpqt5ssjmxauh6vx7tknjraecuvc438
                  refresh_token: p4mk9eemzznkwbpgsk6e3htnn92vbyq37kvz2kupuupm8b6f2g3ccwdjbffrg2av2xrezabmb7kd4s6dj8x7q7gj83465adge8fe4bgmhqe6nw9b3hyxtj765xgya44r
        '401':
          description: Login Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  'status ':
                    type: string
                  'errors ':
                    type: object
                example:
                  errors:
                    status_code: 401
                  message: Unauthorized token
                  status: Unauthorized
  /auth/api/reset-password:
    post:
      tags:
        - Reset Password
      description: Reset user's password
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
          description: Email of the account to reset the password.
      responses:
        '204':
          description: No content
  /auth/api/verification-email:
    post:
      tags:
        - Verification email
      description: Send verification email to user in case the autogenerated one failed or expired
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
          description: Email of the account to reset the password.
      responses:
        '204':
          description: No content
  /users/api/user:
    get:
      tags:
        - CRUD Users
      description: Gets an user
      security:
        - OAuth2: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
            
        '400':
          description: Bad request
    post:
      tags:
        - CRUD Users
      description: Creates an user
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
        '409':
          description: Email already exists
      requestBody:
        description: User metadata
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true

  /users/api/user/{id}:
    patch:
      tags:
        - CRUD Users
      description: Updates an user
      security:
        - OAuth2: []
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '409':
          description: Email already exists
      requestBody:
        description: User metadata
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUser'
        required: true
    delete:
      tags:
        - CRUD Users
      description: Deletes an user
      security:
        - OAuth2: []
      responses:
        '200':
          description: Delete
        '400':
          description: Bad request
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        password:
          tokenUrl: https://fosps.gravitatehealth.eu/auth/api/auth
          refreshUrl: https://fosps.gravitatehealth.eu/auth/api/refresh
          scopes: {}
  schemas:
    Auth:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        client_id:
          type: string
          default: GravitateHealth
        grant_type:
          type: string
          default: password
    RefreshToken:
      type: object
      properties:
        client_id:
          type: string
          default: GravitateHealth
        grant_type:
          type: string
          default: password
        refresh_token:
          type: string
    CreateUser:
      title: CreateUser
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
    KeycloakProfile:
      title: KeycloakProfile
      type: object
      properties:
        id:
          type: string
        createdTimestamp:
          type: integer
        username:
          type: string
        enabled:
          type: boolean
        totp:
          type: boolean
        emailVerified:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        disableableCredentialTypes:
          type: array
        requiredActions:
          type: array
        notBefore:
          type: integer
        access:
          type: object
          properties:
            manageGroupMembership:
              type: boolean
            view:
              type: boolean
            mapRoles:
              type: boolean
            impersonate:
              type: boolean
            manage:
              type: boolean
    GlensProfile:
      title: GlensProfile
      type: object
      properties:
        id:
          type: string
        birth:
          type: string
        sex:
          type: string
        pregnancyStatus:
          type: object
        breastFeeding:
          type: object
        intolerances:
          type: array
          items:
            type: object
        allergies:
          type: array
          items: 
            type: string
        diagnoses:
          type: array
          items: 
            type: string
        medicines:
          type: array
          items: 
            type: string
        howToMedication:
          type: object
        whyTakeMedication:
          type: object
    GetUserResponse:
      type: object
      title: GetUserResponse
      properties:
        keycloakProfile:
            $ref: '#/components/schemas/KeycloakProfile'
        glensProfile:
            $ref: '#/components/schemas/GlensProfile'
    PatchUser:
      type: object
      title: PatchUser
      properties:
        glensProfile:
            $ref: '#/components/schemas/GlensProfile'
        fhirPatient:
          type: object
          description: FHIR Patient resource
          
    UpdateUser:
      type: object
      title: Update User
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
